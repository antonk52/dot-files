#!/bin/bash

alias mvim='nvim -u $HOME/.config/.mvimrc'
# vim goodness
alias :sp='test -n "$TMUX" && tmux split-window'
alias :vs='test -n "$TMUX" && tmux split-window -h'
alias :q='exit'

# ls
if command -v eza &> /dev/null;
then
    alias ls='eza --color=never'
fi
alias ll='ls -alF'

alias cl='clear'

# dir manipulation
alias ..='cd ..'
alias ...='cd ../..'
alias ....='cd ../../..'
alias .....='cd ../../../..'
alias .4='cd ../../../../'
alias .5='cd ../../../../..'
alias compare='diff -rq'

# git
alias g='git'
alias it='git' # fat fitngers
alias ga='git add'
alias gap='git add -p'
alias gs='git status -s'
alias gc='git commit -m'

# tmux aliases
alias tst='tmux start-server'
alias tks='tmux kill-server'
alias tl='tmux list-sessions'
alias ta='tmux attach -t'
alias tmuxr='tmuxinator'

# start a named session by providing a name
# or a blank session by calling `tm`
function tm()
{
  if [ $# -eq 1 ]
  then
    tmux new-session -s "$@"
  else
    tmux
  fi
}

alias listnodes='ps -e|grep node'

# linux aliases
alias agi='sudo apt-get install'
alias update='sudo apt-get update && sudo apt-get upgrade && sudo apt-get dist-upgrade'

# homebrew
alias ibrew='arch -x86_64 brew'

# other aliases
alias e='exit'
alias o='open .'
alias ax='chmod a+x'
alias h='history | fzf +s --tac --tiebreak=index | sed "s/ *[0-9]* *//"'
alias hgrep='history | fzf'
alias q='quit'
alias sl='pmset sleepnow'
alias chux='chmod u+x'
# find all TODO from current dir down
# do not look in dot files
alias ftd='find ./ -type f ! -name ".*" | xargs grep TODO -n --color'
alias findtodo='grep -r TODO ./ -n --color'

# see which currently running apps are using most of your RAM
alias memory='top -o MEM'
alias myip='curl http://ipecho.net/plain; echo'
alias localip='ifconfig en0 | grep "inet" | cut -d: -f2'
alias wifioff='networksetup -setairportpower airport off'
alias wifion='networksetup -setairportpower airport on'
alias topmem='top -stats "pid,command,mem,cpu" -o mem'
alias topcpu='top -stats "pid,command,cpu,mem" -o cpu'
alias findphp='find ./ -name "*.php" | grep --color -n -i'
alias findjs='find ./ -name "*.js" | grep --color -n -i'
# FreeBSD one does not support -m option
# to display week starting from Monday
alias cal='cal -m &> /dev/null && cal -m || cal'

alias bang='notify -t "Well hello there" -m "Your time has come" -i "https://thenib.imgix.net/usq/1d97429f-4a64-4d52-bfdb-c36172c05228/this-is-not-fine-001-dae9d5.png" >/dev/null 2>&1'
alias imgcat='~/dot-files/scripts/imgcat'

export NOTES_PATH="$HOME"/Documents/notes
function notes()
{
  YEAR="$(date '+%Y')"
  MONTH="$(date '+%m')"
  WEEK="$(date '+%W')"
  FILE_PATH="$NOTES_PATH"/"$YEAR"/"$MONTH".md

  if [ ! -d "$DIR_PATH" ]; then
      mkdir -p "$DIR_PATH"
  fi

  # If there is no "notes" window, rename the current one
  if [[ -n "$TMUX" ]]; then
    has_notes_window=$(tmux list-windows | grep notes)
    [ "$has_notes_window" ] || tmux rename-window "notes"
  fi

  old_pwd=$(pwd)

  eval PWD=$NOTES_PATH $EDITOR "$FILE_PATH" -c "NotesMode"
}

alias colorlight="~/dot-files/scripts/base16-github.sh"
alias colordark="~/dot-files/scripts/base16-tomorrow-night.sh"

function cdf()
{
    cd "$(fd --type d --exclude node_modules | fzf)"
}

function gob()
{
    branch_name="$(git branch | fzf-tmux | sed 's/^\(\s\)*\*//g' | sed 's/^ *//g')"

    git go $branch_name
}

function repo_url()
{
    # get origin
    # - git@github.foobar.com:user/repo.git
    # - https://github.foobar.com:user/repo
    #
    # 1. replace `:` between host and user
    # 2. remove `git@` in the beginning if present
    # 3. remove `.git` in the end if present
    # 4. remove `:` in the protocol if it was affected by step 1
    git config remote.origin.url \
        | sed 's/:/\//' \
        | sed -re 's/^git@/https:\/\//g' \
        | sed 's/\.git$//' \
        | sed 's/^https\//https:/'
}

# open macos dictionary for a word
function define() {
    open "dict://$1"
}

alias dict="define"

# brew_upgrade_outdated
function brew_upgrade_outdated() {
    echo "Updating Homebrew..."
    brew update
    # List outdated packages and use fzf to allow the user to select multiple packages
    local packages_to_upgrade=$(brew outdated --quiet | fzf --multi --border --prompt "Select packages to upgrade: " | awk '{printf "%s ", $1}')
    # Check if the user selected any packages
    if [[ -n "$packages_to_upgrade" ]]; then
        # Upgrade the selected packages in one command
        echo "Upgrading selected packages: $packages_to_upgrade"
        eval brew upgrade --quiet "$packages_to_upgrade"
    else
        echo "No packages selected for upgrade."
    fi
}
alias bu="brew_upgrade_outdated"
alias bua="brew update --all && brew upgrade && brew cleanup --quiet"
alias docker_stop_all="docker stop $(docker ps -q)"
